# This is a basic workflow to help you get started with Actions

name: Request Access

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      userName:
        type: string
        required: true
        description: UserName of the Switch Tenant
      userEmail:
        type: string
        required: true
        description: UserName of the Switch Tenant
      Duration:
        description: Duration of Access Required
        required: true
        type: string
      Role:
        description: Type of Role Needed
        required: true
        type: choice
        options:
          - Reader
          - Contributor
      resourceGroup:
        description: RG Name
        required: true
        type: string
      workload:
        description: Prod or Nonprod Subscription
        type: choice
        required: true
        options:
          - prod
          - nonprod

permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    environment: fareimagine

    steps:
      - name: Checkout out infra repo
        uses: actions/checkout@v3
        with:
          repository: FA-Switch-Platform/Infra
          ref: main
          path: infra
          token: ${{ secrets.GH_PAT }}

      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: true

      - name: Get Subscription ID
        id: get-subscription-show
        run: |
         az account show

      - name: Get Subscription ID
        id: get-subscription-name
        run: |
          SUBSCRIPTION_NAME=$(az account show --name 21572cd9-737e-4c88-9cb8-539a49e6da51 --query name --output tsv)
          echo "SUBSCRIPTION_NAME=$SUBSCRIPTION_NAME" >> $GITHUB_OUTPUT

      - name: Verify Resource Group Exists
        id: get-resource-group
        run: |
          if [ $(az group exists --name ${{ inputs.resourceGroup }} --subscription 21572cd9-737e-4c88-9cb8-539a49e6da51 ) = true ];
            then echo "${{ inputs.resourceGroup }} exists in ${{ steps.get-subscription-name.outputs.SUBSCRIPTION_NAME }} subscription"; 
          else 
            echo "${{ inputs.resourceGroup }} does not Exists in ${{ steps.get-subscription-name.outputs.SUBSCRIPTION_NAME }} subscription. Provide a valid Resource Group Name"
            exit 1;
          fi

      - uses: azure/arm-deploy@v1
        name: Verify User Exists in AD
        with:
          deploymentName: verify-user-exists
          resourceGroupName: rg-teams-access-poc
          subscriptionId: 91384b1f-ff36-48d0-aa31-82a57fd91c05
          template: ./infra/infra-as-code/bicep/teams/user.bicep
          region: eastus2
          parameters: userPrincipalName=${{ inputs.userEmail }}
          failOnStdErr: false

      - name: "Trigger Power Automate Workflow"
        run: |
          curl 'https://prod-181.westus.logic.azure.com:443/workflows/aa1400860e384e4fbcdf163913cb4aae/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=u6DrYAlrSdyc78oU5Fe8YV9JioseYfd5JagTBHylbk8' -d '{"userName": "${{ inputs.userName }}",  "userEmail": "${{ inputs.userEmail }}", "subscription": "${{ steps.get-subscription-name.outputs.SUBSCRIPTION_NAME }}", "resourceGroup": "${{ inputs.resourceGroup }}", "roleRequested": "${{ inputs.Role }}", "duration": "${{ inputs.Duration }}"}' -X POST -H "Content-Type: application/json"
